#------------------------ LIBRARIES ----------------------------------------
from langchain_core.messages import HumanMessage, AIMessage
from langchain_core.prompts import PromptTemplate
from typing import Optional
from agent import generate
#--------------------------------------------------------------------------

#-----------------------Variables------------------------------------------
DEBUG = False
#-------------------------------------------------------------------------

#---------------------Prompt-----------------------------------------------
generator_prompt = """
As a farmer seeking investment and buyers for carbon credits generated through your carbon capture and sequestration project.
Develop a comprehensive carbon impact report that showcases your project's potential to attract investors and credit buyers.

name of farm: {farm_name}
Address of farm: {address}
number of job: {no_of_jobs}

In not less than 4000 words, Your report should include the following key metrics and information:

1. Carbon Sequestration Potential:
   - Estimate the annual amount of CO2 or CH4 your project can capture and sequester.
   - Specify the expected duration of carbon sequestration.
   - Explain the scientific methods or models used to calculate these estimates.

2. Project Longevity and Sustainability:
   - Describe the expected lifespan of your project.
   - Outline your plan for ensuring long-term sustainability and maintenance.
   - Identify potential risks or challenges and how you will address them.

3. Additionality and Baseline:
   - Demonstrate how your project's carbon sequestration is additional to a business-as-usual scenario.
   - Establish a clear baseline to measure the project's impact against.
   - Explain how your project goes beyond standard practices or legal requirements.

4. Monitoring, Reporting, and Verification (MRV):
   - Detail the methods and technologies used to monitor and measure carbon sequestration.
   - Specify the frequency of reporting on project progress and impact.
   - Indicate whether you will engage an independent third-party for verification.

5. Environmental and Social Co-Benefits:
   - Highlight other environmental benefits your project provides.
   - Describe how your project contributes to the local community's well-being.
   - Address any potential negative impacts and your mitigation strategies.

6. Alignment with Recognized Standards:
   - Specify any widely recognized carbon offset standards your project aligns with.
   - Discuss your plans for pursuing certification under these standards.

7. Risk Mitigation and Permanence:
   - Outline measures in place to mitigate risks that could affect project permanence.
   - Explain how you will ensure the long-term permanence of the sequestered carbon.

8. Financial Projections and Investment Opportunity:
   - Provide financial projections for your project, including expected costs and revenues.
   - Discuss the potential return on investment for investors and the price range for your carbon credits.
   - Highlight why your project is an attractive investment opportunity or source of carbon credits.

Please generate a detailed and convincing impact report that addresses each of these points, using quantitative data and specific examples where possible.
Your report should instill confidence in potential investors and credit buyers, demonstrating the credibility, impact, and long-term viability of your carbon capture and sequestration project.
"""
reflection_prompt = """
As a Streamlined Energy and Carbon reporting (SECR) Reviewer,
Please carefully review the carbon impact report generated by the farmer seeking investment and buyers for their carbon capture and sequestration project.
As a critic agent, your role is to provide constructive feedback and ensure that the report comprehensively addresses the key metrics and information outlined in the prompt,
ultimately demonstrating the project's credibility, impact, and long-term viability to potential investors and credit buyers.

Evaluate the report based on the following criteria:

1. Carbon Sequestration Potential:
   - Does the report provide clear estimates of the annual amount of CO2 or CH4 the project can capture and sequester?
   - Is the expected duration of carbon sequestration specified?
   - Are the scientific methods or models used to calculate these estimates adequately explained?

2. Project Longevity and Sustainability:
   - Is the expected lifespan of the project clearly described?
   - Does the report outline a robust plan for ensuring long-term sustainability and maintenance?
   - Are potential risks and challenges identified, along with strategies to address them?

3. Additionality and Baseline:
   - Does the report effectively demonstrate how the project's carbon sequestration is additional to a business-as-usual scenario?
   - Is a clear baseline established to measure the project's impact against?
   - Does the report explain how the project goes beyond standard practices or legal requirements?

4. Monitoring, Reporting, and Verification (MRV):
   - Are the methods and technologies used to monitor and measure carbon sequestration described in sufficient detail?
   - Is the frequency of reporting on project progress and impact clearly specified?
   - Does the report indicate whether an independent third-party will be engaged for verification?

5. Environmental and Social Co-Benefits:
   - Does the report highlight the project's environmental benefits beyond carbon sequestration?
   - Is the project's contribution to the local community's well-being adequately described?
   - Are any potential negative impacts addressed, along with appropriate mitigation strategies?

6. Alignment with Recognized Standards:
   - Does the report specify any widely recognized carbon offset standards the project aligns with?
   - Are there clear plans for pursuing certification under these standards?

7. Risk Mitigation and Permanence:
   - Does the report outline robust measures in place to mitigate risks that could affect project permanence?
   - Is there a clear explanation of how the long-term permanence of the sequestered carbon will be ensured?

8. Financial Projections and Investment Opportunity:
   - Are the financial projections for the project, including expected costs and revenues, clearly provided?
   - Does the report discuss the potential return on investment for investors and the price range for the carbon credits?
   - Is a compelling case made for why the project is an attractive investment opportunity or source of carbon credits?

9. Overall Clarity, Coherence, and Persuasiveness:
   - Is the report well-structured, easy to follow, and free of ambiguity?
   - Does the report present a coherent and convincing narrative that ties together all the key elements?
   - Is the report persuasive in instilling confidence in the project's credibility, impact, and long-term viability?

Please provide specific and actionable feedback on each of these criteria, highlighting areas where the report excels and areas where improvements can be made.
If any essential information is missing or if the report fails to adequately address any of the key metrics, please point this out and suggest ways to bridge the gaps.

Your feedback should help refine the report to ensure it presents a comprehensive, credible, and compelling case for investment and carbon credit purchases.
The ultimate goal is to enable the farmer to secure the necessary support and resources to successfully implement their carbon capture and sequestration project.
"""
generate_sys = """ 
You are a Streamlined Energy and Carbon reporting (SECR) expert in regenerative farm for Carbon and methane capture and sequestration.
tasked with generating the best report possible as per user request.
If the user provides critique, develop a revised version of your previous attempts. without any extra details just the report only
"""

def generate_report(prompt: Optional[str] = generator_prompt, sys: Optional[str] = generate_sys,
                    reflect_sys: Optional[str] = reflection_prompt, llm_name: Optional[str] = "llama", **kwargs):
    try:
        if DEBUG:
            print(f"Using {llm_name} as llm")
        
        final_prompt = PromptTemplate.from_template(prompt)
        final_prompt = final_prompt.format(
            farm_name = kwargs["farm_name"],
            address = kwargs["address"],
            no_of_jobs = kwargs["jobs"]
        )


        gen_model = generate(sys, llm_name=llm_name)
        if DEBUG:
            print("============Generate===============")
            print("\n\n")

        result = ""
        request = HumanMessage(content=final_prompt)

        # test the single generate agent
        for chunk in gen_model.stream({"messages": [request]}):
            if DEBUG:
                print(chunk.content, end="")
            result += chunk.content

        #if reflection is activated
        if reflect_sys:
            reflect_model = generate(reflect_sys, llm_name=llm_name)
            if DEBUG:
                print("==================================")
                print("\n\n")
                print("============Reflect===============")
                print("\n\n")

            reflection = ""
            for chunk in reflect_model.stream({"messages": [request, HumanMessage(content=result)]}):
                if DEBUG:
                    print(chunk.content, end="")
                reflection += chunk.content
            
            report_revised = ""
            if DEBUG:
                print("==================================")
                print("\n\n")
                print("============REVISED===============")
                print("\n\n")
            for chunk in gen_model.stream({"messages": [request,AIMessage(content=result),HumanMessage(content=reflection)]}):
                if DEBUG:
                    print(chunk.content, end="")
                report_revised += chunk.content
            
            return report_revised

        return result
    
    except Exception as e:
        if DEBUG:
            print(e)
        
        return "Encountered an error, turn on DEBUG to see more details"

if __name__ == "__main__":
    DEBUG = True
    result = generate_report(generator_prompt, sys=generate_sys, reflect_sys=reflection_prompt, llm_name="llama")
    # print(f"\n\n==================Final result=============\n\n{result}")
